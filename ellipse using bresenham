#include <stdio.h>
#include<GL/glut.h>
#include <math.h>

int a,b,xc,yc;

void midpointellipse(void)
{
 
    float dx, dy, d1, d2, x, y;
    x = 0;
    y = b;
    d1 = (b * b) - (a * a * b)+ (0.25 * a * a);
    dx = 2 * b * b * x;
    dy = 2 * a * a * y;
   
    glBegin(GL_POINTS);
        while (dx < dy) {      
            // Print points based on 4-way symmetry            
        glVertex2f(x+xc, y+yc);
        glVertex2f(-x+xc, y+yc);
        glVertex2f(x+xc, -y+yc);
        glVertex2f(-x+xc, -y+yc);

         if (d1 < 0) {
           x++;
           dx = dx + (2 * b * b);
           d1 = d1 + dx + (b * b);
            }
            else {
             x++;
             y--;
             dx = dx + (2 * b * b);
             dy = dy - (2 * a * a);
             d1 = d1 + dx - dy + (b * b);
            }
        }
    glEnd();
 
    d2 = ((b * b) * ((x + 0.5) * (x + 0.5)))+ ((a* a) * ((y - 1) * (y - 1)))- (a * a * b * b);
   
    glBegin(GL_POINTS);
        while (y >= 0) {
            // printing points based on 4-way symmetry
            glVertex2f(x+xc, y+yc);
            glVertex2f(-x+xc, y+yc);
            glVertex2f(x+xc, -y+yc);
            glVertex2f(-x+xc, -y+yc);

            if (d2 > 0) {
              y--;
              dy = dy - (2 * a * a);
              d2 = d2 + (a * a) - dy;
            }
            else {
              y--;
              x++;
              dx = dx + (2 * b * b);
              dy = dy - (2 * a * a);
              d2 = d2 + dx - dy + (a * a);
            }
        }
    glEnd();
    glFlush();
}

void init(void)
{
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluOrtho2D(0,500,0,500);
}

int main(int argc, char** argv) {
    printf("a : ");
    scanf("%d",&a);
    printf("b : ");
    scanf("%d",&b);
    printf("xc : ");
    scanf("%d",&xc);
    printf("yc : ");
    scanf("%d",&yc);

glutInit(&argc, argv);
glutInitDisplayMode (GLUT_SINGLE | GLUT_RGB);
glutInitWindowSize (800, 800);
glutInitWindowPosition (100,100);
glutCreateWindow ("Ellipse using Bresenham Algorithm");
init();
glutDisplayFunc(midpointellipse);
glutMainLoop();
return 0;
}
